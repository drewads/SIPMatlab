%% Load file to be cropped and analyzedload %filePathheightGrid = %fileNameW/OExtension;%% Plot initial height gridfigure(1);pcolor(heightGrid);shading interp; axis image;title("Height Grid of Points");xlabel("x");ylabel("y");%% Crop height grid to an axially aligned rectangle of desired size%The following bounds are x and y indices on the height gridxLowerBound = ;xUpperBound = ;yLowerBound = ;yUpperBound = ;%is the following the way to do this? depends on what grid is like%unwantedIndices = find(heightGrid%or is this?heightGrid(:,1:xLowerBound) = NaN;heightGrid(:,xUpperBound:size(heightGrid(1,:))) = NaN;heightGrid(1:yLowerBound, :) = NaN;heightGrid(yUpperBound:size(heightGrid(:,1))) = NaN;heightGrid = heightGrid(heightGrid ~= NaN);%% Clear unwanted variablesclear 'xLowerBound' 'xUpperBound' 'yLowerBound' 'yUpperBound'%% Plot cropped height gridfigure(2);pcolor(heightGrid);shading interp; axis image;title("Cropped Height Grid of Points");xlabel("x");ylabel("y");%% Detrend cropped height gridheightGrid = detrend_2d(heightGrid);%% Plot detrended cropped height gridfigure(3);pcolor(heightGrid);shading interp; axis image;title("Detrended Cropped Height Grid of Points");xlabel("x");ylabel("y");%% Calculate standard deviation of the height fieldheightStDev = std2(heightGrid);%% Plot of cdf values for the detrended cropped height gridfigure(4);cdfplot(reshape(heightGrid,1,[]));title("CDF Values for the Detrended Cropped Height Grid of Points");xlabel("Height");%<--what goes here??ylabel("CDF Output");