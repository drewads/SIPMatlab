%% Load file to be cropped/analyzed and define name of dataset%load %filePathheightGrid = %fileNameW/OExtension;dataName = %name here;%% Remove non-dataheightGrid(heightGrid == %Non-data number) = NaN;%% Plot initial height gridfigure(1);pcolor(heightGrid);shading interp; axis image;title([dataName, " Height Grid of Points"]);xlabel("x Indices");ylabel("y Indices");%% Crop height grid to an axially aligned rectangle of desired size%The following bounds are x and y indices on the height gridxLowerBound = ;xUpperBound = ;yLowerBound = ;yUpperBound = ;heightGrid = heightGrid(yLowerBound:yUpperBound, xLowerBound:xUpperBound);%% Clear unwanted variablesclear 'xLowerBound' 'xUpperBound' 'yLowerBound' 'yUpperBound'%% Plot cropped height gridfigure(2);pcolor(heightGrid);shading interp; axis image;title([dataName, " Cropped Height Grid of Points"]);xlabel("x Indices");ylabel("y Indices");%% Detrend cropped height gridheightGrid = detrend_2d(heightGrid);%% Plot detrended cropped height gridfigure(3);pcolor(heightGrid);shading interp; axis image;title([dataName, " Detrended Cropped Height Grid of Points"]);xlabel("x Indices");ylabel("y Indices");%% Calculate statistics of the sampled area from the height fieldheightMean = mean2(heightGrid);heightMedian = median(median((heightGrid)));heightStDev = std2(heightGrid);heightMax = max(max(heightGrid));heightMin = min(min(heightGrid));heightMeanheightMedianheightStDevheightMaxheightMin%% Clear statistic variablesclear 'heightMean' 'heightMedian' 'heightStDev' 'heightMax' 'heightMin'%% Plot of cdf values for the detrended cropped height gridfigure(4);cdfplot(reshape(heightGrid,1,[]));title(["CDF Values for the ", dataName, " Detrended Cropped Height Grid of Points"]);xlabel("Height");ylabel("CDF Output");%% Save figuresprint('-f1', [dataName, " Height Grid of Points"], '-djpeg')print('-f2', [dataName, " Cropped Height Grid of Points"], '-djpeg')print('-f3', [dataName, " Detrended Cropped Height Grid of Points"], '-djpeg')print('-f4', [dataName, " CDFPlot"], '-djpeg')